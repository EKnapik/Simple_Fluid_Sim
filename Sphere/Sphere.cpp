//
//  Sphere.cpp
//  Simple_Fluid_Sim
//
//  Created by Eric Knapik on 5/7/16.
//  Copyright Â© 2016 EKnapik. All rights reserved.
//

#include "Sphere.hpp"



void Sphere::setupGLBuffers() {
    size_t dataSize = this->numVerticies * 4 * sizeof(GLfloat);
    
    // vertex data
    glGenBuffers(1, &this->vBuffer);
    glBindBuffer(GL_ARRAY_BUFFER, this->vBuffer);
    glBufferData(GL_ARRAY_BUFFER, dataSize, this->vertexData, GL_STATIC_DRAW);
    
    // shader program
    this->shaderPrg = shaderSetup("Sphere.vert", "Sphere.frag");
    
    this->initialized = true;
}


void Sphere::setVertexData() {
    
    GLfloat verticies[] = {
        0.00, 0.26, -0.43, 1,
        0.26, -0.43, 1.00, 1,
        -0.43, 1.00, -0.15, 1,
        1.00, -0.15, 0.40, 1,
        -0.15, 0.40, -0.25, 1,
        0.40, -0.25, 1.00, 1,
        -0.25, 1.00, 0.15, 1,
        1.00, 0.15, 0.40, 1,
        0.15, 0.40, -0.25, 1,
        0.40, -0.25, 1.00, 1,
        -0.25, 1.00, -0.15, 1,
        1.00, -0.15, 0.40, 1,
        -0.15, 0.40, -0.25, 1,
        0.40, -0.25, 1.00, 1,
        -0.25, 1.00, -0.26, 1,
        1.00, -0.26, 0.43, 1,
        -0.26, 0.43, 0.00, 1,
        0.43, 0.00, 1.00, 1,
        0.00, 1.00, 0.00, 1,
        1.00, 0.00, 0.50, 1,
        0.00, 0.50, 0.00, 1,
        0.50, 0.00, 1.00, 1,
        0.00, 1.00, 0.15, 1,
        1.00, 0.15, 0.40, 1,
        0.15, 0.40, -0.25, 1,
        0.40, -0.25, 1.00, 1,
        -0.25, 1.00, 0.00, 1,
        1.00, 0.00, 0.50, 1,
        0.00, 0.50, 0.00, 1,
        0.50, 0.00, 1.00, 1,
        0.00, 1.00, 0.26, 1,
        1.00, 0.26, 0.43, 1,
        0.26, 0.43, 0.00, 1,
        0.43, 0.00, 1.00, 1,
        0.00, 1.00, -0.15, 1,
        1.00, -0.15, 0.40, 1,
        -0.15, 0.40, -0.25, 1,
        0.40, -0.25, 1.00, 1,
        -0.25, 1.00, 0.00, 1,
        1.00, 0.00, 0.50, 1,
        0.00, 0.50, 0.00, 1,
        0.50, 0.00, 1.00, 1,
        0.00, 1.00, 0.15, 1,
        1.00, 0.15, 0.40, 1,
        0.15, 0.40, -0.25, 1,
        0.40, -0.25, 1.00, 1,
        -0.25, 1.00, 0.00, 1,
        1.00, 0.00, 0.26, 1,
        0.00, 0.26, 0.43, 1,
        0.26, 0.43, 1.00, 1,
        0.43, 1.00, 0.15, 1,
        1.00, 0.15, 0.40, 1,
        0.15, 0.40, 0.25, 1,
        0.40, 0.25, 1.00, 1,
        0.25, 1.00, -0.15, 1,
        1.00, -0.15, 0.40, 1,
        -0.15, 0.40, 0.25, 1,
        0.40, 0.25, 1.00, 1,
        0.25, 1.00, 0.15, 1,
        1.00, 0.15, 0.40, 1,
        0.15, 0.40, 0.25, 1,
        0.40, 0.25, 1.00, 1,
        0.25, 1.00, 0.26, 1,
        1.00, 0.26, 0.43, 1,
        0.26, 0.43, 0.00, 1,
        0.43, 0.00, 1.00, 1,
        0.00, 1.00, 0.00, 1,
        1.00, 0.00, 0.50, 1,
        0.00, 0.50, 0.00, 1,
        0.50, 0.00, 1.00, 1,
        0.00, 1.00, -0.15, 1,
        1.00, -0.15, 0.40, 1,
        -0.15, 0.40, 0.25, 1,
        0.40, 0.25, 1.00, 1,
        0.25, 1.00, 0.00, 1,
        1.00, 0.00, 0.50, 1,
        0.00, 0.50, 0.00, 1,
        0.50, 0.00, 1.00, 1,
        0.00, 1.00, -0.26, 1,
        1.00, -0.26, 0.43, 1};
    this->numVerticies = 80;
    
    size_t dataSize = sizeof(GLfloat) * this->numVerticies * 4;
    this->vertexData = new GLfloat[numVerticies * 4];
    memcpy( this->vertexData, verticies, dataSize );
}